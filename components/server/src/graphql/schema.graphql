type Query {
  getMiniBrands: [MiniBrand!]!
  getMiniBrand(id: Int!): MiniBrand!
  getImageUploadLink(name: String!): String!
  getMiniBrandsMetaData: MiniBrandsMetaData!
  getMe: User
  getAchievements: Achievements
}

type Mutation {
  saveMiniBrandsMetaData(
    types: [MiniBrandTypeInput!]!
    series: [MiniBrandSeriesInput!]!
    tags: [MiniBrandTagInput!]!
  ): MiniBrandsMetaData!
  saveMiniBrand(input: MiniBrandInput!): MiniBrand!
  updateMiniBrand(id: Int!, input: UpdateMiniBrandInput!): MiniBrand!
  deleteMiniBrand(id: Int!): MiniBrand!
  collectMinibrand(id: Int!, input: CollectMinibrandInput!): CollectedMinibrand!
  updateCollectedMinibrand(id: Int!, input: UpdateCollectedMinibrandInput!): CollectedMinibrand!
}

type User {
  id: Int
  role: Role

  collected: [CollectedMinibrand!]

  localAuth: LocalAuth
  googleAuth: GoogleAuth
}

type LocalAuth {
  email: String
  passwordHash: String
  userId: Int
}

type GoogleAuth {
  id: String
  email: String
  userId: Int
}

enum Role {
  Admin
  Member
}

type Achievements {
  totalCollected: Int!
  type: [AchievementCategory!]!
  tag: [AchievementCategory!]!
}

type CategoryType {
  id: Int!
  value: String!
}

type AchievementCategory {
  type: CategoryType!
  totalCount: Int!
  collectedCount: Int!
  subCategories: [AchievementCategory!]
}

type CollectedMinibrand {
  id: Int!
  minibrandId: Int
  userId: Int

  dateCollected: String
  quantity: Int

  minibrand: MiniBrand
  user: User
}

input CollectMinibrandInput {
  quantity: Int!
}

input UpdateCollectedMinibrandInput {
  quantity: Int!
}

type MiniBrandsMetaData {
  types: [MiniBrandType!]!
  series: [MiniBrandSeries!]!
  tags: [MiniBrandTag!]!
}

type MiniBrand {
  id: Int!
  name: String
  typeId: Int
  seriesId: Int
  imgUrl: String

  type: MiniBrandType
  series: MiniBrandSeries
  tags: [MiniBrandTag!]
  collectors: [CollectedMinibrand!]
}

input MiniBrandInput {
  name: String!
  typeId: Int!
  seriesId: Int!
  tagIds: [Int!]!
  imgUrl: String!
}

input UpdateMiniBrandInput {
  name: String
  typeId: Int
  seriesId: Int
  tagIds: [Int!]
  imgUrl: String
}

type MiniBrandTag {
  id: Int!
  value: String!

  miniBrands: [MiniBrand!]
}

input MiniBrandTagInput {
  value: String!
}

type MiniBrandType {
  id: Int!
  value: String!

  miniBrands: [MiniBrand!]
}

input MiniBrandTypeInput {
  value: String!
}

type MiniBrandSeries {
  id: Int!
  value: String!

  miniBrands: [MiniBrand!]
}

input MiniBrandSeriesInput {
  value: String!
}
